{{- if eq (len .Values.remoteWriteUrls) 0 -}}
{{- fail "at least one item in `.remoteWriteUrls` must be set " -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: vmagent-prometheus-config-reloader
        image: {{ .Values.configreloader.image.repository }}:{{ .Values.configreloader.image.tag }}
        args:
        - "--log-format=logfmt"
        - "--config-file=/etc/prometheus/config/prometheus.yaml.gz"
        - "--reload-url=http://127.0.0.1:8429/-/reload"
        - "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml"
        command:
        - /bin/prometheus-config-reloader
        imagePullPolicy: {{ .Values.configreloader.image.pullPolicy }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        resources:
          {{- toYaml .Values.configreloader.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        args:
          - -promscrape.config=/config_out/prometheus.env.yaml
        {{- range $key, $value := .Values.remoteWriteUrls }}
          - -remoteWrite.url={{ $value }}
        {{- end }}
        {{- range $key, $value := .Values.extraArgs }}
          - -{{ $key }}={{ $value }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 8429
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 15
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        volumeMounts:
          - mountPath: /config_out
            name: config-out
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: prometheus-{{ .Values.configreloader.prometheusName }}
        - emptyDir: {}
          name: config-out
